#+title:     Hydra
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2020-08-16 Sun>
#+language:  en
#+file_tags:
#+tags:

* hydra
The =hydra= library provides an interactive prompt of sorts. It's very handy for
navigating complex keybindings for highly specialized modes. =magit= uses
=hydra= and it seems to work quite well.

** hydra stack
The [[https://github.com/abo-abo/hydra/wiki/Nesting-Hydras][nested hydras]] documentation has a section on [[https://github.com/abo-abo/hydra/wiki/Nesting-Hydras#visiting-other-hydras-temporarily][visiting other hydras
temporarily]]. This documentation suggests adding some parts for stack management,
which we do below.

#+name: config/hydra-stack
#+begin_src emacs-lisp :results none

(defun hydra-stack-init ()
  (defvar-local hydra-stack nil)
  )

(defun hydra-stack-empty-p ()
  ;; (message "hydra-stack empty? %s" (null hydra-stack))
  (if (boundp 'hydra-stack) (null hydra-stack) t)
  )

(defun hydra-push (expr)
  (push `(lambda () ,expr) hydra-stack))

(defun hydra-pop ()
  (interactive)
  (let ((x (pop hydra-stack)))
    (when x
      (funcall x))))
#+end_src
