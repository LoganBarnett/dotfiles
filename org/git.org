#+title:     git
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2019-06-18 Tue>
#+language:  en
#+file_tags: git config

* blame output
  =magit= uses the committer date of a commit, which is misleading on branches that
  have undergone a rebase. The committer date will show as the rebase date, rather
  than the date of the commit. The standard blame output uses the author date,
  and I strongly feel like we should do the same here without

  The formatting below is what is used by default, plus modification of the
  author date shown rather than committer date.

#+begin_src emacs-lisp :results none
  (defun config/git-blame-output ()
    (interactive)
    (setq-default magit-blame-styles
                  '((headings
                    (heading-format . "%-20a %A %s
  "))
                   (margin
                    (margin-format " %s%f" " %A %a" " %H")
                    (margin-width . 42)
                    (margin-face . magit-blame-margin)
                    (margin-body-face magit-blame-dimmed))
                   (highlight
                    (highlight-face . magit-blame-highlight))
                   (lines
                    (show-lines . t)
                    (show-message . t)))
                  )
  )
#+end_src
* gitignore template

The built-in file template for =.gitignore= files is flat out wrong.
=.gitignore= should never have OS, editor, or any other non-project specific
files listed in it. This is the responsibility of the global git ignore, which
by default is =~/.config/git/ignore=. We could unset the template, but I'd
rather use another template. This template will espouse the above policy to
hopefully head off having to explain this over and over.

#+name: config/gitignore-file-template-disable
#+begin_src emacs-lisp :results none :tangle no
(set-file-template! 'gitignore-mode :trigger "gitignore" :mode 'gitignore-mode)
#+end_src

* syncing git-gutter and magit
  =git-gutter= shows "fringe" indicators for adds, edits, and removals of lines
  for a given buffer. This is different than =magit= which serves as a general
  interface to =git= itself. Both are incredibly useful, but they don't talk to
  each other. When staging changes in =magit= (and possibly committing), the
  buffer's fringes are not automatically updated. However a simple hook
  configuration should bind these together quite well:

  #+begin_src emacs-lisp :results none
    (defun config/connect-git-gutter-and-magit ()
      (add-hook 'git-gutter:update-hooks 'magit-after-revert-hook)
      (add-hook 'git-gutter:update-hooks 'magit-not-reverted-hook)
     )
  #+end_src

* linking to web mirrors
I'm not sure if "web mirror" is the proper term, but it kind of makes sense: A
web version of the git repository. Generally we see this when browsing source in
GitHub, BitBucket, GitLab, etc.

=magit= has =SPC g Y= bound to =+vc/browse-at-remote-kill-homepage=, which gets
the home page value but that's not as useful as linking to the file itself.

#+begin_src emacs-lisp :results none

(use-package "browse-at-remote"
  :init
  (on-doom
   ;; Unbind browse-at-remote* (not sure what the tail of this is). This allows
   ;; us to set more specific keybindings.
   ;;
   (map! :after magit :leader :prefix "g" "y" nil)
   (map!
    :after magit
    :leader
    :prefix ("g y" . "git url")
    :n
    "b" #'browse-branch-at-remote-kill
    "y" #'browse-at-remote-kill
    "h" #'+vc/browse-at-remote-homepage
    )
   )
  :config
  (config/init-org-file-private "git-private.org")
  )
#+end_src

* all together
  #+begin_src emacs-lisp :results none :noweb yes
    (require 'use-package)

    (use-package "magit"
      :init
      (config/git-blame-output)
      <<config/gitignore-file-template-disable>>
      :config
      (config/connect-git-gutter-and-magit)
      )
  #+end_src
