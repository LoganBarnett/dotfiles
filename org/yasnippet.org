#+title:    yasnippet
#+author:   Logan Barnett
#+email:    logustus@gmail.com
#+date:     <2018-09-11 Tue>
#+language: en
#+tags:     yasnippet emacs config

* fundamental-mode
  Per this [[https://github.com/joaotavora/yasnippet/issues/557][ticket]], =fundamental-mode= doesn't have a =fundamental-mode-hook=. We
  can get around this issue for emacs-wide snippets by adding a hook onto the
  =yasnippet= minor mode.

  #+begin_src emacs-lisp
    (defun config/yasnippet-fundamental-mode ()
      "Make sure we use snippets in `fundamental-mode' globally."
      (add-hook 'yas-minor-mode-hook
                (lambda ()
                  (yas-activate-extra-mode 'fundamental-mode)))
      )
  #+end_src
* file templates
File templates are templates that expand for new or blank files.  This is a
feature introduced in Doom via the =file-templates= editor module.

Setting the =+file-templates-dir= gives us the power to override the templates.
However this isn't a great way to support a mix of both private and official
packages.  An undocumented way to support overrides is to place a =__= file in
the appropriate snippet directory.  For specifically named files, =__<filename>=
works as well.  The key for these files is assumed to be =__= and we should
continue that when writing file templates.  Files with the =__<filename>=
pattern should use the same =__<filename>= as their key.

* allow require-file-newline

=require-file-newline= set to =nil= makes it such that I must add the newline to
the end of the file, instead of Emacs inserting it automatically. I use this in
my snippet template because I don't always want to insert a newline upon snippet
expansion.

We need to set this in advance so when =yasnippet= is loaded, it will also load
the snippets using this variable non-interactively. If it requires interaction
during startup, it appears that =yasnippet= simply skips the snippet in
question.

#+name: config/yasnippet-require-file-newline-mark-safe
#+begin_src emacs-lisp :results none
(add-to-list 'safe-local-variable-values
              '(require-file-newline . nil)
              )
#+end_src
* snippet dirs

#+name: config/yasnippet-snippet-dirs
#+begin_src emacs-lisp :results none
(setq-default +snippets-dir "~/dev/dotfiles/yasnippets")
#+end_src

* overriding default snippets

I think this can be done, but a [[https://emacs.stackexchange.com/a/66215][Stack Overflow answer]] seems to indicate that
might be otherwise.  I would prefer there to be some kind of load order or
shadowing I could use, but I am unsure.

My findings thus far have shown that if this seems to be happening, it is likely
that I have not named the key correctly, the file correctly, or both. See [[file
templates]] for more details on things like the =__= files.

* apply

  #+begin_src emacs-lisp :results none :noweb yes
    (require 'use-package)

    (use-package "yasnippet"
      :init
      <<config/yasnippet-require-file-newline-mark-safe>>
      <<config/yasnippet-snippet-dirs>>
      (config/yasnippet-fundamental-mode)
      :config
      (yas-recompile-all)
      (yas/reload-all)
      )
  #+end_src
