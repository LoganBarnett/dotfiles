#+title:     Help
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2024-09-13 Fri>
#+language:  en
#+file_tags:
#+tags:

Emacs comes with a lot of documented functions, manuals, and help stuff.  The
default is somewhat lacking though, and this configuration improves upon that.

** helpful

The [[https://github.com/Wilfred/helpful][helpful]] package expands significantly upon the built-in help.  Some of the
perks is that you can see where identifiers are being used, and also see the
code itself.

#+begin_src emacs-lisp :results none :exports code :noweb yes
  (use-package "helpful"
    :ensure t
    :init
    :config
    ;; Helpful's describe-function only works for functions and not macros.
    ;; `helpful-callable' works for both as a drop-in replacement.
    (setq-default counsel-describe-function-function #'helpful-callable)
    (setq-default counsel-describe-variable-function #'helpful-variable)
    (setq-default counsel-describe-command-function #'helpful-command)
    ;;(setq-default counsel-describe-face-function #'helpful-face)
    (map!
      :prefix ("C-h" . "help")
      :desc "helpful-variable" "v" #'counsel-describe-variable
      :desc "helpful-callable" "f" #'counsel-describe-function
      :desc "describe-face" "F" #'counsel-describe-face
      :desc "describe-char" "c" #'describe-char
      :desc "describe-command" "x" #'counsel-describe-command
      :desc "describe-at-point" "h" #'helpful-at-point
      :desc "helpful-key" "k" #'helpful-key
      :desc "describe-symbol" "s" #'counsel-describe-symbol
      ;; Doesn't exist, strangely.
      ;; :desc "describe-package" "S" #'counsel-describe-package
      ;; :desc "describe-language-environment" "L" #'counsel-describe-language-environment
     )
    )
#+end_src
