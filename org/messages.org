#+title:    Messages
#+author:   Logan Barnett
#+email:    logustus@gmail.com
#+date:     <2018-11-30 Fri>
#+language: en
#+tags:     config

=messages-buffer-mode= is used when viewing a message buffer. Generally this is
where logs are stored.

* evilification

  In a recent update of Spacemacs, =evil-mode= bindings seem to have been
  truncated. Namely, my normal =C-w= window prefix died. Let's restore it.

  #+begin_src emacs-lisp :results none
    (defun config/messages-buffer-evilify-evil-window-prefix ()
      "Setup window prefixed commands"
      (interactive)
      ;; The docs state you can use the mode name directly instead of a map within
      ;; it. This resolves problems where certain modes seem to ignore
      ;; `evil-define-key'.
      ;; https://github.com/noctuid/evil-guide#why-dont-keys-defined-with-evil-define-key-work-immediately
      (evil-define-key 'evilified 'messages-buffer-mode
        (kbd "C-w h") 'evil-window-left
        (kbd "C-w j") 'evil-window-down
        (kbd "C-w k") 'evil-window-up
        (kbd "C-w l") 'evil-window-right
        ;; TODO: More to come with other window functions.
        ;; TODO: Consider using https://github.com/emacs-evil/evil-collection
        ;; TODO: Consider generalizing this for other modes
        )
      (evil-set-initial-state 'messages-buffer-mode 'evilified)
      (add-hook 'messages-buffer-mode #'evil-normalize-keymaps)
      (evil-normalize-keymaps)
      (message "window prefix configured")
      )
  #+end_src

* integrate

#+begin_src emacs-lisp :results none :tangle yes
(message "Initializing messages-mode...")
;; This provides a solid way of configuring our leader key in the `*Messages*'
;; buffer:
;; https://github.com/noctuid/general.el/issues/493#issuecomment-913168833
(general-add-hook 'after-init-hook
                  (lambda (&rest _)
                    (when-let ((messages-buffer (get-buffer "*Messages*")))
                      (with-current-buffer messages-buffer
                        (evil-normalize-keymaps))))
                  nil
                  nil
                  t)
#+end_src
