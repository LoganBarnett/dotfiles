#+title:     Jira
#+author:    Logan Barnett-Hoy
#+email:     logustus@gmail.com
#+date:      <2020-10-22 Thu>
#+language:  en
#+file_tags:
#+tags:

* documentation
https://github.com/nyyManni/ejira has an excellent README.

* update only my tickets

This just redefines the update function with a different format string. See
https://github.com/nyyManni/ejira/issues/20 - I should be able to easily fix
this with a function and send a pull request.

#+name: config/ejira-update-only-my-tickets
#+begin_src emacs-lisp :results none

(defun ejira-update-project (id &optional shallow)
  "Update all issues in project ID.
If DEEP set to t, update each issue with separate API call which pulls also
comments. With SHALLOW, only update todo status and assignee."
  (ejira--update-project id)

  ;; First, update all items that are marked as unresolved.
  ;;
  ;; Handles cases:
  ;; *local*    | *remote*
  ;; ===========+===========
  ;;            | unresolved
  ;; unresolved | unresolved
  ;; resolved   | unresolved
  ;;
  (mapc (lambda (i) (if shallow
                        (ejira--update-task-light
                         (ejira--alist-get i 'key)
                         (ejira--alist-get i 'fields 'status 'name)
                         (ejira--alist-get i 'fields 'assignee 'displayName))
                      (ejira--update-task (ejira--parse-item i))))
        (apply #'jiralib2-jql-search
               ;; (format "project = '%s' and resolution = unresolved" id)
               (format "(project = '%s' and resolution = unresolved and assignee = currentUser()) or (project = '%s' and resolution = unresolved and reporter = currentUser())" id id)
               (ejira--get-fields-to-sync shallow)))

  ;; Then, sync any items that are still marked as unresolved in our local sync,
  ;; but are already resolved at the server. This should ensure that there are
  ;; no hanging todo items in our local sync.
  ;;
  ;; Handles cases:
  ;; *local*    | *remote*
  ;; ===========+===========
  ;; unresolved | resolved
  ;;
  (let ((keys (mapcar #'car (ejira--get-headings-in-file
                             (ejira--project-file-name id)
                             '(:todo "todo")))))
    (when keys
      (mapc (lambda (i) (if shallow
                            (ejira--update-task-light
                             (ejira--alist-get i 'key)
                             (ejira--alist-get i 'fields 'status 'name)
                             (ejira--alist-get i 'fields 'assignee 'displayName))
                          (ejira--update-task (ejira--parse-item i))))
            (apply #'jiralib2-jql-search
                   ;; (format "(project = '%s' and resolution = unresolved and assignee = currentUser()) or (project = '%s' and resolution = unresolved and reporter = currentUser())" id id)
                   (format "project = '%s' and key in (%s) and resolution = done"
                           id (s-join ", " keys))
                   (ejira--get-fields-to-sync shallow)))))

  ;; TODO: Handle issue being deleted from server:
  ;; *local*    | *remote*
  ;; ===========+===========
  ;; unresolved |
  ;; resolved   |
  )
#+end_src

* stitch

#+begin_src emacs-lisp :noweb yes :results none
(use-package ejira
  :init
   ;; The curl-insecure script just calls curl with -k to ignore self
   ;; signed certificates. My OpenSSL issues are now fixed though.
   ;; request-curl "curl-insecure"
  :config
  ;; Tries to auto-set custom fields by looking into /editmeta
  ;; of an issue and an epic.
  (add-hook 'jiralib2-post-login-hook #'ejira-guess-epic-sprint-fields)
  (require 'ejira-agenda)
  ;; Ensure org-agenda can see the issues.
  (add-to-list 'org-agenda-files ejira-org-directory)
  ;; Filter only jira issues. This might need some tuning.
  (org-add-agenda-custom-command
   '("J" "My JIRA issues"
     ((ejira-jql "resolution = unresolved and assignee = currentUser()"
                 ((org-agenda-overriding-header "Assigned to me"))))))
  <<config/ejira-update-only-my-tickets>>
  )
#+end_src
