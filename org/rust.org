#+title:     Rust
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2020-09-10 Thu>
#+language:  en
#+file_tags:
#+tags:

* rust-mode vs rustic-mode

=rust-mode= doesn't seem to be keeping up well with evolving deprecations in the
Rust toolchain (such as deprecating =racer= and =rls=). For this reason I have
chosen =rustic-mode=. I thought I used it before, but didn't record reasons for
switching. This might be sitting in the git history for this file.


* racer

=racer= is deprecated, as is =rls=. Prefer =rust-analyzer= now.

* multi-line

I like trailing commas, and Rust supports them everywhere! See the default
strategy in [[file:./prog-mode.org]].

#+name: config/rust-multi-line-commas
#+begin_src emacs-lisp :results none :tangle no
(multi-line-defhook rustic-mode multi-line-add-trailing-comma-strategy t)
#+end_src


* smart-parens

I haven't found the cause yet, but it appears that =rustic= is pulling in and
using =smart-parens=. Disable it. Always.

#+name: config/smartparens-disable
#+begin_src emacs-lisp :results none :tangle no
(defun config/rust-smartparens-disable ()
  (if (boundp 'smart-parens-global-mode)
      (smartparens-global-mode 0)
    nil
    )
  )
(add-hook 'rustic-mode-hook #'config/rust-smartparens-disable)
;; It's unclear if this inserts the characters or just handles logical syntax
;; matching.
;; (setq-default rustic-match-angle-brackets nil)
#+end_src

* indentation

As a huge proponent to 80 columns, I find Rust's 4 space indent to be an awful
choice. Their code formatting uses it, and the community uses it. So trying to
change it seems like a lost cause. That's okay though, because we have
=redshift=.

Ever since installing =highlight-indent-guides-mode=, =redshift-indent-mode= no
longer works alongside it.

#+name: config/rust-redshift
#+begin_src emacs-lisp :results none :tangle no

;; (defun config/rust-redshift-fix-indentation ()
;;   (setq-local redshift-cosmological-constant 0.5)
;;   (redshift-indent-mode)
;;   (redshift-indent -2)
;;   )
;; (add-hook 'rustic-mode-hook #'config/rust-redshift-fix-indentation)
(message "Skipping redshift-indent-mode for rust until we can figure out how to make it play nice with highlight-indent-guides-mode.")
#+end_src

#+name: config/rust-indentation
#+begin_src emacs-lisp :results none :exports code :tangle no
(defun config/rust-indent-from-rustfmt ()
  "Set `rust-indent-offset` from rustfmt.toml if present."
  (require 'toml)
  ;; These aren't buffer-local for some reason.  Bug?
  (make-variable-buffer-local 'rustic-indent-offset)
  (make-variable-buffer-local 'rust-indent-offset)
  (let* ((rustfmt-file (locate-dominating-file default-directory "rustfmt.toml")))
    (if rustfmt-file
        (let* ((config-path (concat rustfmt-file "rustfmt.toml"))
               (config (toml:read-from-file config-path))
               (tab-spaces (alist-get "tab_spaces" config nil nil #'string=))
               (hard-tabs (alist-get "hard_tabs" config nil nil #'string=))
               (indentation (or tab-spaces (if hard-tabs 8 4)))
               )
          ;; Use tab_spaces if defined, otherwise fallback.
          (message "Using rustfml.toml indentation (%s)." indentation)
          (setq-local rust-indent-offset indentation)
          (setq-local rustic-indent-offset indentation)
          )
      ;; No rustfmt.toml found, fallback.
      (let ((indentation 4))
        (message "No rustfmt.toml settings, using %s as a default." indentation)
        (setq-local rust-indent-offset indentation)
        (setq-local rustic-indent-offset indentation)
        )
      )
    )
  )

;; Run after defaults are set.
(add-hook 'rust-mode-hook #'config/rust-indent-from-rustfmt t)
#+end_src

* rust-analyzer / lsp

** lodged rust-analyzer

Sometimes ~rust-analyzer~ can get lodged when ~nix-direnv~ there's some trouble
with the builds in ~nix-direnv~ (even if it gets resolved later).  Doing a
~(lsp-work-space-restart)~ fixes the issue, but knowing it's needed is tricky.
While we don't know if we want to automate this, there is a lot of merit in just
reminding me it might be needed.

#+name: config/rust-analyzer-lodged-restart-notification
#+begin_src emacs-lisp :results none :exports code
(defun config/rustic-lsp-check-diagnostics ()
  (when (and (eq major-mode 'rustic-mode)
             (not (lsp-diagnostics)))
    (message "⚠️ No diagnostics yet — you may need M-x lsp-workspace-restart.")))

(add-hook 'lsp-on-idle-hook #'config/rustic-lsp-check-diagnostics)
#+end_src


* stitch

#+begin_src emacs-lisp :results none :noweb yes
(use-package "rustic"
  :init
  (message "add rust to path manually...")
  (add-to-list 'exec-path (expand-file-name "/run/current-system/sw/bin"))
  ;; This path no longer exists, but maybe keep for pure home-manager configs if
  ;; we ever are forced to use them.
  (add-to-list 'exec-path (expand-file-name "~/.nix-profile/bin"))
  <<config/smartparens-disable>>
  <<config/rust-redshift>>
  <<config/rust-indentation>>
  :config
  <<config/rust-analyzer-lodged-restart-notification>>
  ;; Needed to take advantage of config/rust-multi-line-commas.
  (require 'multi-line)
  <<config/rust-multi-line-commas>>
  )
#+end_src
