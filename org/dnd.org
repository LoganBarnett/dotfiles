#+title:     Dungeons & Dragons
#+author:    Logan Barnett
#+email:     logustus@gmail.com
#+date:      <2019-09-15 Sun>
#+language:  en
#+file_tags:
#+tags:

* load from disk
I don't quite have =dnd.org= published to =elpa= just yet. So I need to load it
from my filesystem.

#+name: config/dnd-load
#+begin_src emacs-lisp :results none :tangle yes
(org-babel-load-file
  (expand-file-name "~/dev/org-dnd/dnd.org")
  )
#+end_src

* key bindings
** prefix keys
  #+name: org-dnd-key-bindings
  #+begin_src emacs-lisp :results none
  (on-doom
    ;; (map!
    ;;   :localleader
    ;;   :desc "dnd"
    ;;   (:prefix "D"
    ;;     :map org-mode-map
    ;;     :ne "n" #'dnd/next-round
    ;;    )
    ;;  )
   )
  #+end_src
* music

  #+begin_src emacs-lisp :results none
    (defun config/dnd-row-to-track (row)
      (message "got row %s" row)
      (let ((name (org-table-get row dnd/name-column)))
        (message "name %s" name)
        (format
        ;; TODO: Parameterize this for other songs.
        "Symphony Of The Void - %s.mp3"
        (or
          (cdr (assoc
          name
          '(
            ("Dee" . "Cello")
            ("Lakal" . "Tambura")
            ("Ydrellia" . "Bansuri")
            ("Zell" . "Oud")
            ("other" . "Trumpet")
            )
          ))
          "Trumpet"
          )
        )
      )
    )

    (defun config/dnd-trigger-personalized-music (row)
      (message "Requesting track change.")
      (let ((track (config/dnd-row-to-track row)))
        (message "Track %s" track)
        (request
          "http://localhost:3704/track/switch"
          :data (json-encode track)
          :headers '(("Content-Type" . "application/json"))
          ;; :parser 'json-read
          ;; :success (cl-function (lambda () (message "Swapped music.")))
          :type "POST"
          )
        )
      )

    (defun config/dnd-hook-personalized-music ()
      (add-hook 'dnd/turn-functions #'config/dnd-trigger-personalized-music)
      )
  #+end_src
* utilities
** equipment weight
#+name: org-dnd-equipment-weight
#+begin_src emacs-lisp :results none :tangle yes
(defun dnd/total-equipment-weight (weights qtys)
  "Calculate the total weights using WEIGHTS * QTYS."
  (reduce
  '+ (-map
      (lambda (xs)
        (* (car xs) (cdr xs)))
      (-zip weights qtys)
      )
  :initial-value 0)
  )
#+end_src

* using
  #+begin_src emacs-lisp :results none :noweb yes
    (with-eval-after-load 'org
      (message "Loading D&D settings...")
      <<org-dnd-key-bindings>>
      <<org-dnd-equipment-weight>>
      (require 'request)
      <<config/dnd-load>>
      (config/dnd-hook-personalized-music)
      )
  #+end_src
