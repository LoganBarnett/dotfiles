#!/usr/bin/env bash

echo 'use flake' > .envrc
if test -f flake.nix ; then
  echo "flake.nix already exists..."
  if git ls-files --error-unmatch | grep --quiet flake.nix ; then
    echo "And it is tracked by git.  Moving on."
  else
    echo "flake.nix not in the git repo.  This will cause an error.  Adding
    flake.nix to git repo..."
    git add flake.nix
    echo "flake.nix added to repository!"
  fi
else
  cat <<EOF > flake.nix
{
  description = "Populate me!";
  inputs = {
    nixpkgs.url = github:NixOS/nixpkgs/nixpkgs-unstable;
  };

  outputs = { self, nixpkgs }@inputs: let
    systems = [
      "aarch64-darwin"
      "aarch64-linux"
      "x86_64-darwin"
      "x86_64-linux"
    ];
    forAllSystems = f: nixpkgs.lib.genAttrs systems f;
    overlays = [];
    pkgsFor = system: import nixpkgs { inherit overlays system; };
    packages = (pkgs: let

    in [

    ]);
  in {

    devShells = forAllSystems (system: {
      default = (pkgsFor system).mkShell {
        buildInputs = (packages (pkgsFor system));
      };
    });
  };
}
EOF
  echo "Created a fresh flake.nix.  You will want to edit this."
  echo "Staging flake.nix because nix-flakes is funky..."
  git add flake.nix
fi
direnv allow

echo "Environment blessed for direnv.  Use \`direnv allow\` to test changes if
the initial run breaks."
