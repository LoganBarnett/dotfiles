#!/usr/bin/env bash

source ~/.bash-logging

set -e
##
# When connecting to the VPN, dnsmasq is started to achieve a split-DNS
# resolution. In some cases dnsmasq comes down but we don't reassign the DNS
# properly. This sets it back.
#
# I suspect this is not the complete answer to fixing a lodged DNS setting,
# since this just seems to lodge the DNS in a new way. Connecting to new
# networks will result in a successful DHCP query, and sets the interface's IP
# address correctly, but the DNS setting from DHCP does not work. It is likely
# that this fix should instead "unset" whatever has been set before by VPN.
##

states=$(
  scutil <<< list \
    | awk '{ print $4 }' \
    | egrep '^State:.+/DNS$' \
)
hardwarePorts=$(networksetup -listallhardwareports \
  | grep 'Hardware Port:' \
  | sed -E 's/Hardware Port: (.+)$/\1/'
  )
IFS=$'\n'
# What we used to do:
# d.add ServerAddresses * ${dnsIps}
#
# I need to test that remove works with four scenarios:
# 1: When connecting to vpn.
# 2: When disconnecting from vpn.
# 3: When connecting to proton.
# 4: When connecting to something other than proton.
#
# So far it seems to work while connected to proton already.
for state in $states ; do
  echo $state
  printf "d.init
d.remove ServerAddresses
set ${state}
quit
" | tee /dev/tty | sudo scutil
done
for port in $hardwarePorts; do
  sudo networksetup -setdnsservers "$port" "Empty" || true
done
