#!/usr/bin/env bash
################################################################################
# Print out a ISO-8601 time stamp corresponding to a human friendly time zone.
#
# Right now it just supports some time zones used in the mainland United States.
# Its primary purpose is to allow shorthand for expressing various time zones
# and get quick conversions.
#
# Some fun things about date/time misconceptions we have:
# https://www.creativedeletion.com/2015/01/28/falsehoods-programmers-date-time-zones.html
################################################################################

set -euo pipefail

timezone_input=''

while true; do
  case "${1:-}" in
    -h | --help)
      cat 1>&2 <<EOH
Usage: $0 [--help] <timezone>
EOH
      exit
      ;;
    * )
      timezone_input="$(echo "${1:-}" | tr '[:lower:]' '[:upper:]')"
      break
      ;;
  esac
done

# IANA time zone names are the ones you see with a location.  Cities and other
# narrow locations are considered to be the most "static" geographic entities
# for the purposes of tracking time zones (though even that has been shown to be
# a shifting target).
# Find more information on the topic here:
# https://data.iana.org/time-zones/tz-link.html
timezone_iana=''
case "$timezone_input" in
  # Arizona does not observe Daylight Savings Time, and thus has its own time
  # zone (not Mountain Time).
  AT|AZ)
    timezone_iana='America/Phoenix'
    ;;
  CT)
    timezone_iana='America/Chicago'
    ;;
  ET)
    timezone_iana='America/New_York'
    ;;
  MT)
    timezone_iana='America/Denver'
    ;;
  PT)
    timezone_iana='America/Los_Angeles'
    ;;
  UTC)
    timzone_iana='Etc/UTC'
esac

TZ="$timezone_iana" date -Iseconds
