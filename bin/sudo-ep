#!/usr/bin/env expect -f

# WIP - doesn't do the trick yet.
################################################################################
# sudo-ep
#
# Provides sudo via extended priviledge (EP) accounts.
#
# EP accounts are accounts on a host which are administrators/sudoers.
# The passwords for these accounts might rapidly rotate, making them infeasible
# to use for typical workflows requiring root access. Meanwhile, users needing
# such priviledges have an incredibly cumbersome mechanism to elevate their
# priviledges in order to perform basic local (and semi-frequent) administrative
# tasks.
#
# sudo-ep aims to be a sudo compatible program which can be aliased over sudo
# for real sudo purposes.
#
################################################################################

# SUDO_ASKPASS="$(which sudo-ep-askpass)" /usr/bin/sudo -A -u "$EP_USER" $*

# pass show ep \
#   | SUDO_ASKPASS="$(which sudo-ep-askpass)" /usr/bin/sudo -A $*

# pass show ep \
#   | su $EP_USER \
#   ls
  #SUDO_ASKPASS="$(which sudo-ep-askpass)" /usr/bin/sudo -A $*

exp_internal 1
spawn -noecho pass show ep
set pass $expect_out(1,string)
eval spawn su -l "$env(EP_USER)"
set prompt ":"
# send "$(pass show ep)"
send_user "$pass"
send "ls"
