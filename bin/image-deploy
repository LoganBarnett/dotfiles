#!/usr/bin/env bash
##
# Deploys a bootable image with NixOS to a removable storage.  This image should
# contain the entirety of the configuration, sans password updates (until I can
# get secret management going).  The image is built and then the removable
# storage is reformmatted to use the built image contents.
##

set -euo pipefail

while true; do
  case "${1:-}" in
    -h | --help)
      cat <<EOH
Usage: $0 [opts]

  --image <image-file> Instead of building the image, use the one provided.
                       Ex: result/iso/*.iso or result/sd-image/*.img
  --disk  <dev-path>   Instead of auto detecting the disk, use the one provided.
                       Must be a fully qualified path.  Ex: /dev/disk4

Deploys a bootable image with NixOS to a removable storage.  This image should
contain the entirety of the configuration, sans password updates (until I can
get secret management going).  The image is built and then the removable storage
is reformmatted to use the built image contents.

EOH
      exit
      ;;
    --image)
      image_name="${2:-}"
      shift 2
      ;;
    --disk)
      disk="${2:-}"
      shift 2
      ;;
    * ) break ;;
  esac
done

if [ -z ${disk+x} ]; then
  disk="/dev/$(disk-detachable)"
fi

if [ -z ${image_name+x} ]; then
  image_name="$(./image-create.sh)"
fi
diskutil unmountDisk $disk
sudo dd \
     if="$image_name" \
     of=$disk \
     bs=4M \
     status=progress \
     conv=fsync
